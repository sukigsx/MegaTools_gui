 #!/bin/bash

conexion(){
if ping -c1 google.com &>/dev/null
then
    var_conexion="SI"
else
    var_conexion="NO"
    var_actualizado="No hay conexion a internet"
fi
}

while :
do
    # Mostrar el menú de selección utilizando Zenity
    selection=$(zenity --list --title="Instalar gestor de paquetes. - MegaTools" \
    --text="\nSoftware disponible para gestion de paquetes en entornos linux.\n" \
    --checklist --column="Marca una o varias casillas para instalar" --column="Gestores de paquetes" --column="Descripcion." \
    --width=300 --height=200 \
    --cancel-label="Atras" \
    --ok-label="Aceptar" \
    --width=950 \
    --height=650 \
    FALSE "Gdebi" "Instala paquetes deb." \
    FALSE "Synaptic" "interfaz gráfica, para el sistema de gestión de paquetes de Debian GNU/Linux.." \
    FALSE "Snap" "Gestor de paquetes snap.(se añade a tu tienda de aplicaciones)" \
    FALSE "Flatpak" "Gestor de paquetes Flatpak.(se añadade a tu tienda de aplicaciones)" \
    FALSE "Appimage" "Gestor de paquetes Appimages." \
    )

    # Verificar si se presionó "Atras" en el diálogo de Zenity
    if [ $? -eq 1 ]; then
        exit 0
    fi

    # Verificar si no se seleccionó ninguna opción
    if [ -z "$selection" ]; then
        zenity --error --title="Instalacion de Utilidades - MegaTools -" --text="No has seleccionado ningun gestor de paquetes." --width=300
    else
        echo ""
    fi


    # Verificar las opciones seleccionadas y ejecutar los comandos correspondientes
    IFS="|" read -ra selected_options <<< "$selection"  # Establecer el separador como "|"
    for option in "${selected_options[@]}"; do
        case $option in
            "Gdebi")
                #codigo para la instalacion se mete a /tmp/software
                echo "#Gdebi" >> /tmp/software #mete el nombre del programa para poder comprobar su instalacion
                echo "sudo apt install -y gdebi" >> /tmp/software
                echo "" >> /tmp/software

                #linea con el nombre del programa instalado para la comprobacion
                echo "gdebi" >> /tmp/ComprobarSoftware
                ;;

            "Synaptic")
                #codigo para la instalacion se mete a /tmp/software
                echo "#Synaptic" >> /tmp/software #mete el nombre del programa para poder comprobar su instalacion
                echo "sudo apt install -y synaptic" >> /tmp/software
                echo "" >> /tmp/software

                #linea con el nombre del programa instalado para la comprobacion
                echo "synaptic" >> /tmp/ComprobarSoftware
                ;;

            "Snap")
                #codigo para la instalacion se mete a /tmp/software
                echo "#Snap" >> /tmp/software #mete el nombre del programa para poder comprobar su instalacion
                echo "sudo apt install -y snapd" >> /tmp/software
                echo "" >> /tmp/software

                #linea con el nombre del programa instalado para la comprobacion
                echo "snap" >> /tmp/ComprobarSoftware
                ;;

            "Flatpak")
                #codigo para la instalacion se mete a /tmp/software
                echo "#Flatpak" >> /tmp/software #mete el nombre del programa para poder comprobar su instalacion
                echo "sudo apt install flatpak -y" >> /tmp/software
                echo "sudo apt install gnome-software-plugin-flatpak -y" >> /tmp/software
                echo "sudo apt install plasma-discover-backend-flatpak -y" >> /tmp/software
                echo "sudo flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo -y" >> /tmp/software

                echo "" >> /tmp/software

                #linea con el nombre del programa instalado para la comprobacion
                echo "flatpak" >> /tmp/ComprobarSoftware
                ;;

            "Appimage")
                #codigo para la instalacion se mete a /tmp/software
                echo "#Appimage" >> /tmp/software #mete el nombre del programa para poder comprobar su instalacion
                echo 'ruta=$(xdg-user-dir DESKTOP)' >> /tmp/software
                echo 'wget -P "$ruta" https://github.com/prateekmedia/appimagepool/releases/download/5.1.0/appimagepool-5.1.0-x86_64.AppImage' >> /tmp/software
                echo 'mv $ruta/appimagepool-5.1.0-x86_64.AppImage $ruta/Tienda_AppImage.AppImage' >> /tmp/software
                echo 'sudo touch /usr/bin/Tienda_AppImage.AppImage' >> /tmp/software
                echo "" >> /tmp/software

                #linea con el nombre del programa instalado para la comprobacion
                echo 'Tienda_AppImage.AppImage' >> /tmp/ComprobarSoftware
                sudo rm /usr/bin/Tienda_AppImage.AppImage
                ;;

            *)
            #if [ $? -eq 0 ]; then
            #    zenity --error --title="MegaTools ( Diseñado por SUKIGSX )" --text="No has seleccionado ninguna opcion del menu." --width=300
            #else
            #    zenity --question --title="MegaTools ( Diseñado por SUKIGSX )" --text="¿ Estás seguro de que deseas salir ?" --cancel-label="No" --ok-label="Si" --width=300
            #    if [ $? -eq 0 ]; then
            #        exit 0
            #    fi
            #fi
            echo "he entrado en el *"; read p
            ;;
        esac
    done
    exit #sale cuando termiona el for con lo seleccionado.
done


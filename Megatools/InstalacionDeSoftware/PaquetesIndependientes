#!/bin/bash
ruta_descargas=$(xdg-user-dir DOWNLOAD)
ruta_ejecucion=$(dirname "$(readlink -f "$0")")

password(){
# Inicializar el contador de intentos
    attempts=0

    # Bucle para solicitar la contraseña hasta tres intentos
    while [ $attempts -lt 3 ]; do
        # Solicitar la contraseña del usuario actual utilizando Zenity
        PASSWORD=$(zenity --entry --hide-text --text="Ingrese tu contraseña" --title="Contraseña de usuario. - MegaTools -" --width=450 --height=100)

        # Verificar si se ha cancelado la entrada de la contraseña
        if [ $? -ne 0 ]; then
            # Salir del script si se ha cancelado
            rm /tmp/software 2>/dev/null
            rm /tmp/ComprobarSoftware 2>/dev/null
            rm /tmp/comprobacion 2>/dev/null
            exit
        fi

        # Verificar la contraseña utilizando el comando sudo
        echo "$PASSWORD" | sudo -S ls /root >/dev/null 2>&1

        # Verificar el código de salida del comando sudo
        if [ $? -eq 0 ]; then
            # Contraseña correcta
            zenity --info --title="Contraseña de usuario. - MegaTools -" --text="La contraseña es correcta." --width=250 --height=100 --timeout 3
            break
        else
            # Contraseña incorrecta
            let "attempts+=1"
            if [ $attempts -lt 3 ]; then
                zenity --error --title="Contraseña de usuario. - MegaTools -" --text="La contraseña es incorrecta. Inténtelo de nuevo." --width=250 --height=100 --timeout 3
            else
                zenity --error --title="Contraseña de usuario. - MegaTools -" --text="Se han superado los tres intentos. Se regresa al menu principal." --width=250 --height=100 --timeout 7
                rm /tmp/software 2>/dev/null
                exit
            fi
        fi
    done
}

listado_paquetes_descargados(){
if [ "$(ls -A $ruta_descargas/*.deb 2>/dev/null)" ]; then
    listado_paquetes=$(basename -a $ruta_descargas/*.deb)
    existen_deb="si"
else
    listado_paquetes="No tienes paquetes para instalar."
    existen_deb="no"
fi
}


comprobar_navegador(){
if which $navegador &>/dev/null
then
    navegador_seleccionado=$navegador
else
    zenity --error --title="Instalacion de Paquetes Independientes - Megatools -" --text="No dispones del navegador $navegador.\nPuedes instalarlo del menu Navegadores." --width=400
    exit
fi
}

while :
do
    # selecciona el navegador preferido
    navegador=$(zenity --list --title="Instalacion de Paquetes Independientes. - MegaTools -" \
    --text="\n Forma de instalacion de los paquetes independientes.\n \
    \n Selecciona un navegador. \
    \n \
    \n Sera el encargado de abrirse para descargar el software. \
    \n" \
    --column="Selecciona tu navegador" --column="Descripcion." \
    --width=300 --height=200 \
    --cancel-label="Atras" \
    --ok-label="Siguiente" \
    --extra-button="Ayuda" \
    --width=950 \
    --height=650 \
    "google-chrome-stable" "Navegador para descargar tu paquete deb." \
    "chromium" "Navegador para descargar tu paquete deb." \
    "firefox" "Navegador para descargar tu paquete deb." \
    "opera" "Navegador para descargar tu paquete deb." \
    "brave" "Navegador para descargar tu paquete deb." \
    "vivaldi-stable" "Navegador para descargar tu paquete deb." \
    )

    case $navegador in
        "firefox")
            comprobar_navegador
            break
            ;;

        "google-chrome-stable")
            comprobar_navegador
            break
            ;;

        "chromium")
            comprobar_navegador
            break
            ;;

        "opera")
            comprobar_navegador
            break
            ;;

        "brave")
            comprobar_navegador
            break
            ;;

        "vivaldi-stable")
            comprobar_navegador
            break
            ;;

        "Ayuda")
            zenity --text-info --title="Ayuda, paquetes independientes - MegaTools -" --filename=$ruta_ejecucion/Megatools/AyudaPaquetesIndependientes --font="DejaVu Sans Mono" --width=650 --height=650
            ;;

        *)
            if [ $? -eq 0 ]; then
                zenity --error --title="Instalacion de Paquetes Independientes - Megatools -" --text="No has seleccionado ningun navegador del menu.\nSe necesita uno para poder descargar el paquete deb." --width=400
            else
                exit 0
            fi
            ;;
    esac
done


while :
do
    # Mostrar el menú de selección utilizando Zenity
    listado_paquetes_descargados
    selection=$(zenity --list --title="Instalacion de Paquetes Independientes. - MegaTools -" \
    --text="\n Forma de instalacion de los paquetes independientes.\n \
    \n - Selecciona el software que te interese. Y le das al boton Descargar. \
    \n - Se abrira el navegador que hayas seleccionado anteriormente en la pagina para descargar el paquete deb.\
    \n - Descargalo en la carpeta DESCARGAS (Si no esta en esa ruta, NO lo encontrara para su instalacion).\
    \n - Dale al boton Instalar y empezara el proceso de instalacion de todos los paquetes deb descargados en la carpeta DESCARGAS. \
    \n - Cuando termine se borraran todos los paquetes deb de la carpeta descargas.\
    \n \
    \n Listado de paquetes para instalar: \
    \n \
    \n $listado_paquetes \
    \n" \
    --column="Paquetes independientes" --column="Descripcion." \
    --width=300 --height=200 \
    --cancel-label="Atras" \
    --ok-label="Descargar" \
    --extra-button="Borrar paquetes descargos" \
    --extra-button="Instalar paquetes deb" \
    --width=950 \
    --height=650 \
    "Busqueda Libre" "Se abre el navegador $navegador en www.google.es para que busuqes manualmente tus paquetes deb." \
    "Franz" "Control de varias cuentas a la vez como google, telegram,etc." \
    "Debreate" "Construccion de paquetes deb." \
    "Genymotion" "Emulador de Android en la nube y para PC con integraciones para marcos de prueba. (al dar a Descargar se instala solo)" \
    "VirtualBox" "Sostware gratuito para crear maquinas virtuales." \
    "Script de Sukigsx" "Instalador de scripts de Sukigsx. (al dar a Descargar se instala solo)" \
    "TeamViewer" "Control remoto de pc's, tablets y moviles." \
    )

    case $selection in
        "Busqueda Libre")
            $navegador www.google.es &>/dev/null
            ;;

        "Franz")
            $navegador https://meetfranz.com/ &>/dev/null
            ;;
        "Debreate")
            $navegador https://antumdeluge.github.io/debreate-web/ &>/dev/null
            ;;

        "Genymotion")
            #borramos el geny por si hay alguna descarga anterior
            rm $ruta_descargas/geny* >/dev/null 2>&1

            $navegador https://www.genymotion.com/download/ &>/dev/null

            if [ -f $ruta_descargas/genymotion*.bin ]; then
                #crea el fichero de instalacion geny
                rm /tmp/geny >/dev/null 2>&1
                echo 'echo ""' >> /tmp/geny
                echo 'echo "Instalacion automatica de GenyMotion"' >> /tmp/geny
                echo 'echo ""' >> /tmp/geny
                echo 'echo "Se necesita tu password para instalar."' >> /tmp/geny
                echo 'echo ""' >> /tmp/geny
                echo "sudo chmod 777 $ruta_descargas/genymotion*.bin" >> /tmp/geny
                echo "sudo $ruta_descargas/genymotion*.bin -y" >> /tmp/geny
                echo "rm $ruta_descargas/geny*.bin" >> /tmp/geny
                echo 'echo ""' >> /tmp/geny
                echo 'echo "Instalacion de GenyMotion = ok"' >> /tmp/geny
                echo 'echo ""' >> /tmp/geny
                echo 'echo "Pulsa en continuar"' >> /tmp/geny
                echo "sleep 5" >> /tmp/geny
                konsole -geometry 800x500+0+0 -e bash /tmp/geny &

                #creamos bucle que mientras este ejecutando el script software en segundo plano no sale del bucle
                while ps -ef | grep "geny" | grep -v grep >/dev/null 2>&1
                do
                    pid=$(ps -ef | grep "geny" | grep -v grep | awk '{print $2}')

                    zenity --question --text="- Puedes cancelar la instalacion.\n- Esperar a que termine y pulsar continuar." --title="Instalacion de software. - MegaTools" --cancel-label="Cancelar, la instalacion" --ok-label="Continuar"

                    if [ $? = 1 ]; then
                        kill $pid >/dev/null 2>&1
                        rm $ruta_descargas/geny*.bin
                    fi
                    sleep 1
                done
            else
                zenity --error --title="Instalacion de Genymotion. - MegaTools -" --text="No se a encontrado el paquete para instalar de Genymotion." --width=400
            fi
            rm /tmp/geny >/dev/null 2>&1
            ;;

        "VirtualBox")
            $navegador https://www.virtualbox.org/wiki/Linux_Downloads &>/dev/null
            ;;

        "Script de Sukigsx")
            git clone https://github.com/sukigsx/ejecutar_scripts.git /tmp/ejecutar_scripts/ >/dev/null 2>&1
            cd /tmp/ejecutar_scripts
            bash instalar.sh
            cd ..
            sudo rm -r ejecutar_scripts
            zenity --info --title="Instalacion de Paquetes Independientes - MegaTools -" --text="Script de sukigsx, Instalado correctamente.\n\n Forma de jecucion::\n Abre una terminal y escribe (scripts)" --timeout=10 --width=400
            ;;

        "TeamViewer")
            $navegador https://www.teamviewer.com/es/download/linux/ &>/dev/null
            ;;

        "Borrar paquetes descargos")
            if [ $existen_deb = "si" ]; then
                zenity --question --title="Instalacion de Paquetes Independientes - MegaTools -" --text="Listado de paquetes en la carpeta descargas:\n\n$listado_paquetes\n\n¿Desea borrar todos los paquetes descagados?" --width=500 --ok-label="Aceptar" --cancel-label="Cancelar"
                if [ $? = 0 ]; then
                    rm $ruta_descargas/*.deb
                fi
            else
                zenity --error --title="Instalacion de Paquetes Independientes - MegaTools -" --text=" No existen paquetes *.deb para borrar." --width=400
            fi
            ;;

        "Instalar paquetes deb")
            # Verificar si existen archivos *.deb en la carpeta Descargas
            if [ $existen_deb = "si" ]; then
                #borra por si hay restos de InstalarPaquetesDeb
                rm $ruta_descargas/InstalarPaquetesDeb > /dev/null 2>&1

                #crea el fichero InstalarPaquetesDeb
                echo 'echo "- Empezando la instalacion de paquetes descargados -"' >> $ruta_descargas/InstalarPaquetesDeb
                echo 'echo ""' >> $ruta_descargas/InstalarPaquetesDeb
                echo 'echo "Te pedira el password de tu usurio"' >> $ruta_descargas/InstalarPaquetesDeb
                echo "sudo dpkg -i $ruta_descargas*.deb" >> $ruta_descargas/InstalarPaquetesDeb
                echo "sudo apt -f -y install" >> $ruta_descargas/InstalarPaquetesDeb
                echo "sudo rm $ruta_descargas/*.deb" >> $ruta_descargas/InstalarPaquetesDeb
                echo 'echo "- TERMINADA LA INSTALACION DE PAQUETES -"' >> $ruta_descargas/InstalarPaquetesDeb
                echo 'zenity --text-info --width=600 --height=400 --title="Software para instalar. - MegaTools" --auto-scroll --font="DejaVu Sans Mono" --cancel-label="-" --ok-label="Aceptar"' >> $ruta_descargas/InstalarPaquetesDeb

                #cargamos en segundo plano la ejecucion de instalacion de software.
                konsole -geometry 500x400+900+0 --noclose -e bash $ruta_descargas/InstalarPaquetesDeb &

            else
                zenity --error --title="Instalacion de Paquetes Independientes - MegaTools -" --text=" No existen paquetes *.deb para su instalacion." --width=400
            fi

            ;;

        *)
            if [ $? = 1 ]; then
                break
            else
                zenity --error --title="Instalacion de Paquetes Independientes - MegaTools -" --text=" No has seleccionado ningun Paquete Independiente, para su descarga." --width=400
            fi
            ;;
    esac
done
#borramos el fichero de InstalarPaquetesDeb
rm $ruta_descargas/InstalarPaquetesDeb > /dev/null 2>&1

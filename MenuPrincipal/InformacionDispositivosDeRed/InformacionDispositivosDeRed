 #!/bin/bash

if [ $(which ifconfig) ]; then
    echo ""
else
    zenity --question --title="Informacion de dispositivos de red. - MegaTools -" --text="Se necesita el paquete net-tools. ¿ Quieres instalarlo ?" --cancel-label="No" --ok-label="Si" --width=300
    if [ $? -eq 1 ]; then
        exit 0
    fi

    # Inicializar el contador de intentos
    attempts=0

    # Bucle para solicitar la contraseña hasta tres intentos
    while [ $attempts -lt 3 ]; do
        # Solicitar la contraseña del usuario actual utilizando Zenity
        PASSWORD=$(zenity --entry --hide-text --text="Ingrese tu contraseña" --title="Contraseña de usuario. - MegaTools -" --width=450 --height=100)

        # Verificar si se ha cancelado la entrada de la contraseña
        if [ $? -ne 0 ]; then
            # Salir del script si se ha cancelado
            exit
        fi

        # Verificar la contraseña utilizando el comando sudo
        echo "$PASSWORD" | sudo -S ls /root >/dev/null 2>&1

        # Verificar el código de salida del comando sudo
        if [ $? -eq 0 ]; then
            # Contraseña correcta
            zenity --info --title="Contraseña de usuario. - MegaTools -" --text="La contraseña es correcta."
            exit
        else
            # Contraseña incorrecta
            let "attempts+=1"
            if [ $attempts -lt 3 ]; then
                zenity --error --title="" --text="La contraseña es incorrecta. Inténtelo de nuevo."
            else
                zenity --error --title="Contraseña de usuario. - MegaTools -" --text="Se han superado los tres intentos.\n Regresando al Menu Principal."
                exit
            fi
        fi
    done




    sudo apt install net-tools | zenity --text-info --title="Instalando - MegaTools" --width=350 --height=200 --cancel-label="Salir sin preguntar" --ok-label="Atras" --width=650
fi

echo -e "Comando: ifconfig -s\n" > /tmp/InfoDispositivosDeRed; ifconfig -s >> /tmp/InfoDispositivosDeRed; echo -e "\nInformacion de dispositivos de red finalizado." >> /tmp/InfoDispositivosDeRed

while :
do
# Mostrar la salida en una ventana con Zenity
opcion=$(zenity --text-info --filename=/tmp/InfoDispositivosDeRed --title="Informacion de dispositivos de red. - MegaTools -" --ok-label="Atras" --cancel-label="Salir sin preguntar" --extra-button="Mas detalles" --extra-button="Menos detalles" --font="DejaVu Sans Mono" --width=800 --height=450)

    case $opcion in

        "Mas detalles")
            #Nombre del archivo donde se guardará la salida de ethtool
            output_file="/tmp/InfoDispositivosDeRed"

            #Limpiar el archivo de salida si ya existe
            > "$output_file"

            #Obtener una lista de todas las interfaces de red
            interfaces=$(ls /sys/class/net/)

            #Recorrer cada interfaz y ejecutar ethtool sobre ellas
            for interface in $interfaces; do
                echo "Informacion de la Tarjeta de red : $interface" >> "$output_file"
                ethtool "$interface" >> "$output_file" 2>/dev/null
                echo "" >> "$output_file"
                echo "Fin de la informacion de la tarjeta de red $interface" >> "$output_file"
                echo "" >> "$output_file"
            done
            ;;

        "Menos detalles")
            echo -e "Comando: ifconfig -s\n" > /tmp/InfoDispositivosDeRed; ifconfig -s >> /tmp/InfoDispositivosDeRed; echo -e "\nInformacion de dispositivos de red finalizado." >> /tmp/InfoDispositivosDeRed
            ;;

        *)
            if [ $? = "1" ]; then
                # Leer el PID del archivo para matar el script pricipal
                uno_pid=$(</tmp/ProcesoPidDeMegatools)

                # Matar el proceso de uno.sh
                kill $uno_pid
                rm /tmp/ProcesoPidDeMegatools
                rm /tmp/InfoDispositivosDeRed
                exit
            else
                rm /tmp/ProcesoPidDeMegatools
                rm /tmp/InfoDispositivosDeRed
                exit
            fi
        ;;
    esac
done
